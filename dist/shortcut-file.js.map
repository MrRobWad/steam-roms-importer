{"version":3,"sources":["../src/shortcut-file.js"],"names":["fs","r","defaultShortcutPath","ShortcutFile","filePath","shortcuts","_readFile","existsSync","data","readFileSync","parse","toJSON","map","s","filter","ShortcutPath","e","console","error","shortcut","push","callback","build","writeFile"],"mappings":"AAAA;;;;;;;;AAEA;;IAAYA,E;;AACZ;;AACA;;;;AACA;;AACA;;IAAYC,C;;;;;;;;AAEZ,IAAMC,sBAAsB,qBAA5B;;IAEqBC,Y;AACjB,0BAAYC,QAAZ,EACA;AAAA;;AACI,aAAKA,QAAL,GAAgBA,QAAhB;AACA,aAAKC,SAAL,GAAiB,EAAjB;;AAEA,aAAKC,SAAL;AACH;;;;oCAGD;AACI,gBAAI,CAACN,GAAGO,UAAH,CAAc,KAAKH,QAAnB,CAAL,EACI;;AAEJ,gBAAII,OAAOR,GAAGS,YAAH,CAAgB,KAAKL,QAArB,CAAX;;AAEA,gBACA;AACI,qBAAKC,SAAL,GAAiB,2BAAUK,KAAV,CAAgBF,IAAhB,EAAsBG,MAAtB,EAAjB;;AAEA,qBAAKN,SAAL,GAAiBJ,EAAEW,GAAF,CACb,UAACC,CAAD;AAAA,2BAAO,iCAAaA,CAAb,CAAP;AAAA,iBADa,EAEbZ,EAAEa,MAAF,CACI;AAAA,2BAAKD,EAAEE,YAAF,IAAkBb,mBAAvB;AAAA,iBADJ,EAEI,KAAKG,SAFT,CAFa,CAAjB;AAMH,aAVD,CAWA,OAAMW,CAAN,EACA;AACIC,wBAAQC,KAAR,CAAcF,CAAd;AACH;AACJ;;;oCAEWG,Q,EACZ;AACI,gBAAIN,IAAI,iCAAaM,QAAb,CAAR;;AAEAN,cAAEE,YAAF,GAAiBb,mBAAjB;;AAEA,iBAAKG,SAAL,CAAee,IAAf,CAAoBP,CAApB;AACA,mBAAOA,CAAP;AACH;;;uCAEcQ,Q,EACf;AACI,gBAAIb,OAAO,4BAAWc,KAAX,CAAiB,KAAKjB,SAAtB,CAAX;;AAEAL,eAAGuB,SAAH,CAAa,KAAKnB,QAAlB,EAA4BI,IAA5B,EAAkC,UAACU,KAAD;AAAA,uBAAWG,SAASH,KAAT,CAAX;AAAA,aAAlC;AACH;;;;;;kBAhDgBf,Y","file":"shortcut-file.js","sourcesContent":["\"use strict\";\r\n\r\nimport * as fs from 'fs';\r\nimport {Parser as VDFParser, Builder as VDFBuilder, Shortcut} from 'node-steam-shortcuts';\r\nimport crc from 'crc';\r\nimport {Uint64BE} from 'int64-buffer';\r\nimport * as r from 'ramda';\r\n\r\nconst defaultShortcutPath = 'steam-roms-importer';\r\n\r\nexport default class ShortcutFile {\r\n    constructor(filePath)\r\n    {\r\n        this.filePath = filePath;\r\n        this.shortcuts = [];\r\n\r\n        this._readFile();\r\n    }\r\n\r\n    _readFile()\r\n    {\r\n        if (!fs.existsSync(this.filePath))\r\n            return;\r\n\r\n        let data = fs.readFileSync(this.filePath);\r\n\r\n        try\r\n        {\r\n            this.shortcuts = VDFParser.parse(data).toJSON();\r\n\r\n            this.shortcuts = r.map(\r\n                (s) => new Shortcut(s), \r\n                r.filter(\r\n                    s => s.ShortcutPath != defaultShortcutPath,\r\n                    this.shortcuts)\r\n            );\r\n        }\r\n        catch(e)\r\n        {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    addShortcut(shortcut)\r\n    {\r\n        let s = new Shortcut(shortcut);\r\n\r\n        s.ShortcutPath = defaultShortcutPath;\r\n\r\n        this.shortcuts.push(s);\r\n        return s;\r\n    }\r\n\r\n    writeShortcuts(callback)\r\n    {\r\n        var data = VDFBuilder.build(this.shortcuts);\r\n\r\n        fs.writeFile(this.filePath, data, (error) => callback(error));\r\n    }\r\n}"]}