{"version":3,"sources":["../src/game-console.js"],"names":["GameConsole","jsonFilePath","jsonData","JSON","parse","readFileSync","filePath","name","shortName","tags","prefix","icon","romPaths","extensions","emulators","emulator","romsConfig","length","configPath","join","__dirname","resolve","normalize","loadRomsConfig","content","contentJsonString","stringify","writeFileSync","console","log","emulatorName","emulatorNames","keys","fileName","basename","replace","p","global","USER_CONFIG_DIR","existsSync","config","enabled","grid","games","dir","error","entries","readdirSync","entry","s","statSync","isFile","ext","extname","indexOf","gameConfig","getRomConfig","push","saveRomsConfig"],"mappings":"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","file":"game-console.js","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport Game from './game';\r\nimport _ from 'lodash';\r\nimport {getUserConfigDirectory} from './user-config';\r\n\r\nexport default class GameConsole {\r\n    constructor(jsonFilePath)\r\n    {\r\n        let jsonData = JSON.parse(fs.readFileSync(jsonFilePath));\r\n\r\n        this.filePath = jsonFilePath;\r\n\r\n        this.name = jsonData.name || '';\r\n        this.shortName = jsonData.shortName || '';\r\n        this.tags = jsonData.tags || [];\r\n        this.prefix = jsonData.prefix || '';\r\n        this.icon = jsonData.icon || '';\r\n        this.romPaths = jsonData.romPaths || [];\r\n        this.extensions = jsonData.extensions || [];\r\n        this.emulators = {};\r\n        this.emulator = jsonData.emulator || 0;\r\n        this.romsConfig = {};\r\n\r\n        if (this.icon && this.icon.length)\r\n        {\r\n            let configPath = path.join(__dirname, 'config', 'icons');\r\n\r\n            this.icon = path.resolve(configPath, path.normalize(this.icon));\r\n        }\r\n\r\n        this.loadRomsConfig();\r\n    }\r\n\r\n    updateFromUserJsonFile(jsonFilePath)\r\n    {\r\n        let jsonData = JSON.parse(fs.readFileSync(jsonFilePath));\r\n        \r\n        this.name = jsonData.name || this.name;\r\n        this.shortName = jsonData.shortName || this.shortName;\r\n        this.tags = jsonData.tags || this.tags;\r\n        this.prefix = jsonData.prefix || this.prefix;\r\n        this.icon = jsonData.icon || this.icon;\r\n        this.romPaths = jsonData.romPaths || this.romPaths;\r\n        this.extensions = jsonData.extensions || this.extensions;\r\n        this.emulator = jsonData.emulator || this.emulator;\r\n\r\n        if (this.icon && this.icon.length)\r\n        {\r\n            let configPath = path.join(__dirname, 'config', 'icons');\r\n\r\n            this.icon = path.resolve(configPath, path.normalize(this.icon));\r\n        }\r\n    }\r\n\r\n    generateUserJsonFile(jsonFilePath)\r\n    {\r\n        var content = {\r\n            name: this.name,\r\n            romPaths: [],\r\n            emulator: \"\",\r\n            tags: this.tags,\r\n            prefix: this.prefix,\r\n            extensions: this.extensions\r\n        }\r\n\r\n        var contentJsonString = JSON.stringify(content, null, 4);\r\n\r\n        fs.writeFileSync(jsonFilePath, contentJsonString);\r\n\r\n        console.log(`Generated user config file for console ${this.name} at ${jsonFilePath}`);\r\n    }\r\n\r\n    addEmulator(emulatorName, emulator)\r\n    {\r\n        this.emulators[emulatorName] = emulator;\r\n    }\r\n\r\n    getEmulator()\r\n    {\r\n        let emulatorNames = _.keys(this.emulators);\r\n\r\n        if (!emulatorNames.length)\r\n            return null;\r\n\r\n        if (!this.emulator)\r\n            return this.emulators[emulatorNames[0]];\r\n\r\n        return this.emulators[this.emulator];\r\n    }\r\n\r\n    loadRomsConfig()\r\n    {\r\n        let fileName = path.basename(this.filePath).replace('.json', '.roms');\r\n\r\n        let p = path.join(global.USER_CONFIG_DIR, 'consoles', fileName);\r\n\r\n        if (fs.existsSync(p))\r\n            this.romsConfig = JSON.parse(fs.readFileSync(p));\r\n    }\r\n\r\n    saveRomsConfig()\r\n    {\r\n        let fileName = path.basename(this.filePath).replace('.json', '.roms');\r\n\r\n        let p = path.join(global.USER_CONFIG_DIR, 'consoles', fileName);\r\n\r\n        if (_.keys(this.romsConfig).length)\r\n            fs.writeFileSync(p, JSON.stringify(this.romsConfig, null, 2));\r\n    }\r\n\r\n    getRomConfig(name)\r\n    {\r\n        let config = this.romsConfig[name] || {\r\n            enabled: true,\r\n            grid: \"\"\r\n        } \r\n\r\n        this.romsConfig[name] = config;\r\n\r\n        return config;\r\n    }\r\n\r\n    toObject()\r\n    {\r\n        return {\r\n            name: this.name,\r\n            shortName: this.shortName,\r\n            tags: this.tags,\r\n            prefix: this.prefix,\r\n            icon: this.icon,\r\n            romPaths: this.romPaths,\r\n            extensions: this.extensions\r\n        };\r\n    }\r\n\r\n    searchGames()\r\n    {\r\n        let games = [];\r\n\r\n        for (let dir of this.romPaths)\r\n        {\r\n            dir = path.normalize(dir);\r\n            if (!fs.existsSync(dir))\r\n            {\r\n                console.error('Directory does not exist: ' + dir);\r\n                continue;\r\n            }\r\n            \r\n            let entries = fs.readdirSync(dir);\r\n            \r\n            for (let entry of entries)\r\n            {\r\n                let p = path.join(dir, entry);\r\n                let s = fs.statSync(p);\r\n\r\n                if (!s.isFile())\r\n                    continue;\r\n\r\n                let ext = path.extname(entry).replace(/^\\./, '');\r\n\r\n                if (this.extensions.indexOf(ext) != -1)\r\n                {\r\n                    let gameConfig = this.getRomConfig(entry);                \r\n                    games.push(new Game(this, p, gameConfig));\r\n                }\r\n            }\r\n        }\r\n\r\n        this.games = games;\r\n\r\n        this.saveRomsConfig();\r\n    }\r\n}"]}