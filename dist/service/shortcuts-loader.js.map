{"version":3,"sources":["../../src/service/shortcuts-loader.js"],"names":["generateShortcuts","getSteamConfigPath","users","readdirSync","length","Error","filePath","loadShortcutsFile","Promise","resolve","join","shortcutFile","consoles","shortcutsFile","games","consoleName","gameConsole","searchGames","emulator","getEmulator","game","gameShortcut","appname","prefix","cleanName","exe","getCommandForGame","icon","tags","replace","ignore","shortcut","addShortcut","push","gameName","name","appid","getAppID","writeShortcuts"],"mappings":";;;;;;QAuBsBA,iB,GAAAA,iB;;AAvBtB;;;;AACA;;;;AAEA;;;;AAEO,IAAMC,kDAAqB,SAArBA,kBAAqB,GAAM;AACtC,MAAMC,QAAQ,aAAGC,WAAH,CAAe,wCAAf,CAAd;;AAEA,MAAI,CAACD,KAAD,IAAU,CAACA,MAAME,MAArB,EAA6B,MAAO,IAAIC,KAAJ,CAAU,4BAAV,CAAP;;AAE7B,MAAMC,sDAAoDJ,MAAM,CAAN,CAApD,YAAN;;AAEA,SAAOI,QAAP;AACD,CARM;;AAUA,IAAMC,gDAAoB,SAApBA,iBAAoB;AAAA,SAAM,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9D,QAAMH,WAAW,eAAKI,IAAL,CAAUT,oBAAV,EAAgC,eAAhC,CAAjB;;AAEA,QAAMU,eAAe,wBAAiBL,QAAjB,CAArB;;AAEA,WAAOG,QAAQE,YAAR,CAAP;AACD,GANsC,CAAN;AAAA,CAA1B;;AAQA,eAAeX,iBAAf,CAAiCY,QAAjC,EAA2CC,aAA3C,EAA0D;AAC/D,MAAMC,QAAQ,EAAd;;AAEA,OAAK,IAAMC,WAAX,IAA0BH,QAA1B,EAAoC;AAClC,QAAMI,cAAcJ,SAASG,WAAT,CAApB;;AAEAC,gBAAYC,WAAZ;AACA,QAAMC,WAAWF,YAAYG,WAAZ,EAAjB;;AAEA,QAAID,QAAJ,EAAc;AAAA;AAAA;AAAA;;AAAA;AACZ,6BAAmBF,YAAYF,KAA/B,8HAAsC;AAAA,cAA3BM,IAA2B;;AACpC,cAAMC,eAAe;AACnBC,qBAAYN,YAAYO,MAAxB,SAAkCH,KAAKI,SADpB;AAEnBC,iBAAKP,SAASQ,iBAAT,CAA2BN,IAA3B,CAFc;AAGnBO,kBAAMX,YAAYW,IAHC;AAInBC,kBAAMZ,YAAYY;AAJC,WAArB;;AAOAP,uBAAaC,OAAb,GAAuBD,aAAaC,OAAb,CAAqBO,OAArB,CAA6B,KAA7B,EAAoC,EAApC,EAAwCA,OAAxC,CAAgD,KAAhD,EAAuD,EAAvD,CAAvB;;AAEA,cAAI,CAACT,KAAKU,MAAV,EAAkB;AAChB,gBAAMC,WAAWlB,cAAcmB,WAAd,CAA0BX,YAA1B,CAAjB;;AAEAP,kBAAMmB,IAAN,CAAW;AACTC,wBAAUd,KAAKI,SADN;AAETT,2BAAaC,YAAYmB,IAFhB;AAGTC,qBAAOL,SAASM,QAAT;AAHE,aAAX;AAKD;AACF;AApBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBb;AACF;;AAED,QAAMxB,cAAcyB,cAAd,EAAN;;AAEA,SAAOxB,KAAP;AACD","file":"shortcuts-loader.js","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\n\r\nimport { ShortcutFile } from '../model';\r\n\r\nexport const getSteamConfigPath = () => {\r\n  const users = fs.readdirSync('C:/Program Files (x86)/Steam/userdata/');\r\n\r\n  if (!users || !users.length) throw (new Error('No steam directory found !'));\r\n\r\n  const filePath = `C:/Program Files (x86)/Steam/userdata/${users[0]}/config`;\r\n\r\n  return filePath;\r\n};\r\n\r\nexport const loadShortcutsFile = () => new Promise((resolve) => {\r\n  const filePath = path.join(getSteamConfigPath(), 'shortcuts.vdf');\r\n\r\n  const shortcutFile = new ShortcutFile(filePath);\r\n\r\n  return resolve(shortcutFile);\r\n});\r\n\r\nexport async function generateShortcuts(consoles, shortcutsFile) {\r\n  const games = [];\r\n\r\n  for (const consoleName in consoles) {\r\n    const gameConsole = consoles[consoleName];\r\n\r\n    gameConsole.searchGames();\r\n    const emulator = gameConsole.getEmulator();\r\n\r\n    if (emulator) {\r\n      for (const game of gameConsole.games) {\r\n        const gameShortcut = {\r\n          appname: `${gameConsole.prefix} ${game.cleanName}`,\r\n          exe: emulator.getCommandForGame(game),\r\n          icon: gameConsole.icon,\r\n          tags: gameConsole.tags,\r\n        };\r\n\r\n        gameShortcut.appname = gameShortcut.appname.replace(/^ +/, '').replace(/ +$/, '');\r\n\r\n        if (!game.ignore) {\r\n          const shortcut = shortcutsFile.addShortcut(gameShortcut);\r\n\r\n          games.push({\r\n            gameName: game.cleanName,\r\n            consoleName: gameConsole.name,\r\n            appid: shortcut.getAppID(),\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  await shortcutsFile.writeShortcuts();\r\n\r\n  return games;\r\n}\r\n"]}