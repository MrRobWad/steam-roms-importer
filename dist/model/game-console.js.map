{"version":3,"sources":["../../src/model/game-console.js"],"names":["GameConsole","jsonFilePath","jsonData","JSON","parse","readFileSync","filePath","name","shortName","tags","prefix","icon","romPaths","extensions","emulators","emulator","romsConfig","length","configPath","join","__dirname","resolve","normalize","loadRomsConfig","content","contentJsonString","stringify","writeFileSync","console","log","emulatorName","emulatorNames","fileName","basename","replace","p","global","USER_CONFIG_DIR","existsSync","config","enabled","grid","games","dir","error","entries","readdirSync","entry","s","statSync","isFile","ext","extname","indexOf","gameConfig","getRomConfig","push","saveRomsConfig"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;;;IAEqBA,W;AACnB,uBAAYC,YAAZ,EAA0B;AAAA;;AACxB,QAAMC,WAAWC,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAgBJ,YAAhB,CAAX,CAAjB;;AAEA,SAAKK,QAAL,GAAgBL,YAAhB;;AAEA,SAAKM,IAAL,GAAYL,SAASK,IAAT,IAAiB,EAA7B;AACA,SAAKC,SAAL,GAAiBN,SAASM,SAAT,IAAsB,EAAvC;AACA,SAAKC,IAAL,GAAYP,SAASO,IAAT,IAAiB,EAA7B;AACA,SAAKC,MAAL,GAAcR,SAASQ,MAAT,IAAmB,EAAjC;AACA,SAAKC,IAAL,GAAYT,SAASS,IAAT,IAAiB,EAA7B;AACA,SAAKC,QAAL,GAAgBV,SAASU,QAAT,IAAqB,EAArC;AACA,SAAKC,UAAL,GAAkBX,SAASW,UAAT,IAAuB,EAAzC;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,QAAL,GAAgBb,SAASa,QAAT,IAAqB,CAArC;AACA,SAAKC,UAAL,GAAkB,EAAlB;;AAEA,QAAI,KAAKL,IAAL,IAAa,KAAKA,IAAL,CAAUM,MAA3B,EAAmC;AACjC,UAAMC,aAAa,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,OAA/B,CAAnB;;AAEA,WAAKT,IAAL,GAAY,eAAKU,OAAL,CAAaH,UAAb,EAAyB,eAAKI,SAAL,CAAe,KAAKX,IAApB,CAAzB,CAAZ;AACD;;AAED,SAAKY,cAAL;AACD;;;;2CAEsBtB,Y,EAAc;AACnC,UAAMC,WAAWC,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAgBJ,YAAhB,CAAX,CAAjB;;AAEA,WAAKM,IAAL,GAAYL,SAASK,IAAT,IAAiB,KAAKA,IAAlC;AACA,WAAKC,SAAL,GAAiBN,SAASM,SAAT,IAAsB,KAAKA,SAA5C;AACA,WAAKC,IAAL,GAAYP,SAASO,IAAT,IAAiB,KAAKA,IAAlC;AACA,WAAKC,MAAL,GAAcR,SAASQ,MAAT,IAAmB,KAAKA,MAAtC;AACA,WAAKC,IAAL,GAAYT,SAASS,IAAT,IAAiB,KAAKA,IAAlC;AACA,WAAKC,QAAL,GAAgBV,SAASU,QAAT,IAAqB,KAAKA,QAA1C;AACA,WAAKC,UAAL,GAAkBX,SAASW,UAAT,IAAuB,KAAKA,UAA9C;AACA,WAAKE,QAAL,GAAgBb,SAASa,QAAT,IAAqB,KAAKA,QAA1C;;AAEA,UAAI,KAAKJ,IAAL,IAAa,KAAKA,IAAL,CAAUM,MAA3B,EAAmC;AACjC,YAAMC,aAAa,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,OAA/B,CAAnB;;AAEA,aAAKT,IAAL,GAAY,eAAKU,OAAL,CAAaH,UAAb,EAAyB,eAAKI,SAAL,CAAe,KAAKX,IAApB,CAAzB,CAAZ;AACD;AACF;;;yCAEoBV,Y,EAAc;AACjC,UAAMuB,UAAU;AACdjB,cAAM,KAAKA,IADG;AAEdK,kBAAU,EAFI;AAGdG,kBAAU,EAHI;AAIdN,cAAM,KAAKA,IAJG;AAKdC,gBAAQ,KAAKA,MALC;AAMdG,oBAAY,KAAKA;AANH,OAAhB;;AASA,UAAMY,oBAAoBtB,KAAKuB,SAAL,CAAeF,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAA1B;;AAEA,mBAAGG,aAAH,CAAiB1B,YAAjB,EAA+BwB,iBAA/B;;AAEAG,cAAQC,GAAR,6CAAsD,KAAKtB,IAA3D,YAAsEN,YAAtE;AACD;;;gCAEW6B,Y,EAAcf,Q,EAAU;AAClC,WAAKD,SAAL,CAAegB,YAAf,IAA+Bf,QAA/B;AACD;;;kCAEa;AACZ,UAAMgB,gBAAgB,oBAAK,KAAKjB,SAAV,CAAtB;;AAEA,UAAI,CAACiB,cAAcd,MAAnB,EAA2B,OAAO,IAAP;AAC3B,UAAI,CAAC,KAAKF,QAAV,EAAoB,OAAO,KAAKD,SAAL,CAAeiB,cAAc,CAAd,CAAf,CAAP;;AAEpB,aAAO,KAAKjB,SAAL,CAAe,KAAKC,QAApB,CAAP;AACD;;;qCAEgB;AACf,UAAMiB,WAAW,eAAKC,QAAL,CAAc,KAAK3B,QAAnB,EAA6B4B,OAA7B,CAAqC,OAArC,EAA8C,OAA9C,CAAjB;;AAEA,UAAMC,IAAI,eAAKhB,IAAL,CAAUiB,OAAOC,eAAjB,EAAkC,UAAlC,EAA8CL,QAA9C,CAAV;;AAEA,UAAI,aAAGM,UAAH,CAAcH,CAAd,CAAJ,EAAsB,KAAKnB,UAAL,GAAkBb,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAgB8B,CAAhB,CAAX,CAAlB;AACvB;;;qCAEgB;AACf,UAAMH,WAAW,eAAKC,QAAL,CAAc,KAAK3B,QAAnB,EAA6B4B,OAA7B,CAAqC,OAArC,EAA8C,OAA9C,CAAjB;;AAEA,UAAMC,IAAI,eAAKhB,IAAL,CAAUiB,OAAOC,eAAjB,EAAkC,UAAlC,EAA8CL,QAA9C,CAAV;;AAEA,UAAI,oBAAK,KAAKhB,UAAV,EAAsBC,MAA1B,EAAkC,aAAGU,aAAH,CAAiBQ,CAAjB,EAAoBhC,KAAKuB,SAAL,CAAe,KAAKV,UAApB,EAAgC,IAAhC,EAAsC,CAAtC,CAApB;AACnC;;;iCAEYT,I,EAAM;AACjB,UAAMgC,SAAS,KAAKvB,UAAL,CAAgBT,IAAhB,KAAyB;AACtCiC,iBAAS,IAD6B;AAEtCC,cAAM;AAFgC,OAAxC;;AAKA,WAAKzB,UAAL,CAAgBT,IAAhB,IAAwBgC,MAAxB;;AAEA,aAAOA,MAAP;AACD;;;+BAEU;AACT,aAAO;AACLhC,cAAM,KAAKA,IADN;AAELC,mBAAW,KAAKA,SAFX;AAGLC,cAAM,KAAKA,IAHN;AAILC,gBAAQ,KAAKA,MAJR;AAKLC,cAAM,KAAKA,IALN;AAMLC,kBAAU,KAAKA,QANV;AAOLC,oBAAY,KAAKA;AAPZ,OAAP;AASD;;;kCAEa;AACZ,UAAM6B,QAAQ,EAAd;;AADY;AAAA;AAAA;;AAAA;AAGZ,6BAAgB,KAAK9B,QAArB,8HAA+B;AAAA,cAAtB+B,GAAsB;;AAC7BA,gBAAM,eAAKrB,SAAL,CAAeqB,GAAf,CAAN;;AAEA,cAAI,aAAGL,UAAH,CAAcK,GAAd,CAAJ,EAAwB;AACtBf,oBAAQgB,KAAR,gCAA2CD,GAA3C;AACD,WAFD,MAEO;AACL,gBAAME,UAAU,aAAGC,WAAH,CAAeH,GAAf,CAAhB;;AADK;AAAA;AAAA;;AAAA;AAGL,oCAAoBE,OAApB,mIAA6B;AAAA,oBAAlBE,KAAkB;;AAC3B,oBAAMZ,IAAI,eAAKhB,IAAL,CAAUwB,GAAV,EAAeI,KAAf,CAAV;AACA,oBAAMC,IAAI,aAAGC,QAAH,CAAYd,CAAZ,CAAV;;AAEA,oBAAIa,EAAEE,MAAF,EAAJ,EAAgB;AACd,sBAAMC,MAAM,eAAKC,OAAL,CAAaL,KAAb,EAAoBb,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,CAAZ;;AAEA,sBAAI,KAAKrB,UAAL,CAAgBwC,OAAhB,CAAwBF,GAAxB,MAAiC,CAAC,CAAtC,EAAyC;AACvC,wBAAMG,aAAa,KAAKC,YAAL,CAAkBR,KAAlB,CAAnB;AACAL,0BAAMc,IAAN,CAAW,gBAAS,IAAT,EAAerB,CAAf,EAAkBmB,UAAlB,CAAX;AACD;AACF;AACF;AAfI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBN;AACF;AAzBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2BZ,WAAKZ,KAAL,GAAaA,KAAb;;AAEA,WAAKe,cAAL;AACD;;;;;;kBAhJkBzD,W","file":"game-console.js","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport keys from 'lodash/keys';\r\n\r\nimport { Game } from './index';\r\n\r\nexport default class GameConsole {\r\n  constructor(jsonFilePath) {\r\n    const jsonData = JSON.parse(fs.readFileSync(jsonFilePath));\r\n\r\n    this.filePath = jsonFilePath;\r\n\r\n    this.name = jsonData.name || '';\r\n    this.shortName = jsonData.shortName || '';\r\n    this.tags = jsonData.tags || [];\r\n    this.prefix = jsonData.prefix || '';\r\n    this.icon = jsonData.icon || '';\r\n    this.romPaths = jsonData.romPaths || [];\r\n    this.extensions = jsonData.extensions || [];\r\n    this.emulators = {};\r\n    this.emulator = jsonData.emulator || 0;\r\n    this.romsConfig = {};\r\n\r\n    if (this.icon && this.icon.length) {\r\n      const configPath = path.join(__dirname, 'config', 'icons');\r\n\r\n      this.icon = path.resolve(configPath, path.normalize(this.icon));\r\n    }\r\n\r\n    this.loadRomsConfig();\r\n  }\r\n\r\n  updateFromUserJsonFile(jsonFilePath) {\r\n    const jsonData = JSON.parse(fs.readFileSync(jsonFilePath));\r\n\r\n    this.name = jsonData.name || this.name;\r\n    this.shortName = jsonData.shortName || this.shortName;\r\n    this.tags = jsonData.tags || this.tags;\r\n    this.prefix = jsonData.prefix || this.prefix;\r\n    this.icon = jsonData.icon || this.icon;\r\n    this.romPaths = jsonData.romPaths || this.romPaths;\r\n    this.extensions = jsonData.extensions || this.extensions;\r\n    this.emulator = jsonData.emulator || this.emulator;\r\n\r\n    if (this.icon && this.icon.length) {\r\n      const configPath = path.join(__dirname, 'config', 'icons');\r\n\r\n      this.icon = path.resolve(configPath, path.normalize(this.icon));\r\n    }\r\n  }\r\n\r\n  generateUserJsonFile(jsonFilePath) {\r\n    const content = {\r\n      name: this.name,\r\n      romPaths: [],\r\n      emulator: '',\r\n      tags: this.tags,\r\n      prefix: this.prefix,\r\n      extensions: this.extensions,\r\n    };\r\n\r\n    const contentJsonString = JSON.stringify(content, null, 4);\r\n\r\n    fs.writeFileSync(jsonFilePath, contentJsonString);\r\n\r\n    console.log(`Generated user config file for console ${this.name} at ${jsonFilePath}`);\r\n  }\r\n\r\n  addEmulator(emulatorName, emulator) {\r\n    this.emulators[emulatorName] = emulator;\r\n  }\r\n\r\n  getEmulator() {\r\n    const emulatorNames = keys(this.emulators);\r\n\r\n    if (!emulatorNames.length) return null;\r\n    if (!this.emulator) return this.emulators[emulatorNames[0]];\r\n\r\n    return this.emulators[this.emulator];\r\n  }\r\n\r\n  loadRomsConfig() {\r\n    const fileName = path.basename(this.filePath).replace('.json', '.roms');\r\n\r\n    const p = path.join(global.USER_CONFIG_DIR, 'consoles', fileName);\r\n\r\n    if (fs.existsSync(p)) this.romsConfig = JSON.parse(fs.readFileSync(p));\r\n  }\r\n\r\n  saveRomsConfig() {\r\n    const fileName = path.basename(this.filePath).replace('.json', '.roms');\r\n\r\n    const p = path.join(global.USER_CONFIG_DIR, 'consoles', fileName);\r\n\r\n    if (keys(this.romsConfig).length) fs.writeFileSync(p, JSON.stringify(this.romsConfig, null, 2));\r\n  }\r\n\r\n  getRomConfig(name) {\r\n    const config = this.romsConfig[name] || {\r\n      enabled: true,\r\n      grid: '',\r\n    };\r\n\r\n    this.romsConfig[name] = config;\r\n\r\n    return config;\r\n  }\r\n\r\n  toObject() {\r\n    return {\r\n      name: this.name,\r\n      shortName: this.shortName,\r\n      tags: this.tags,\r\n      prefix: this.prefix,\r\n      icon: this.icon,\r\n      romPaths: this.romPaths,\r\n      extensions: this.extensions,\r\n    };\r\n  }\r\n\r\n  searchGames() {\r\n    const games = [];\r\n\r\n    for (let dir of this.romPaths) {\r\n      dir = path.normalize(dir);\r\n\r\n      if (fs.existsSync(dir)) {\r\n        console.error(`Directory does not exist: ${dir}`);\r\n      } else {\r\n        const entries = fs.readdirSync(dir);\r\n\r\n        for (const entry of entries) {\r\n          const p = path.join(dir, entry);\r\n          const s = fs.statSync(p);\r\n\r\n          if (s.isFile()) {\r\n            const ext = path.extname(entry).replace(/^\\./, '');\r\n\r\n            if (this.extensions.indexOf(ext) !== -1) {\r\n              const gameConfig = this.getRomConfig(entry);\r\n              games.push(new Game(this, p, gameConfig));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.games = games;\r\n\r\n    this.saveRomsConfig();\r\n  }\r\n}\r\n"]}